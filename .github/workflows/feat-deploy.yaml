name: üöÄ Feature Deploy, Clean Up

on:
  push:
    branches:
    - 'feat/**'
  delete:
    branches:
    - 'feat/**'

permissions:
  id-token: write
  contents: read

env:
  cluster-name:    cloudkube-dev-m59i-cluster
  cluster-rg:      cloudkube-dev-m59i-rg
  acr-registry:    cloudkubereviews
  base-tag:        cloudkubereviews.azurecr.io/frontend
  image-name:      frontend
  k8s-namespace:   architecture-review

  # pattern in manifests/feat/deployment.yaml
  deployment-base-name: temp-nuxtjs

  manifests-dir:   './manifests/feat/'
  hostname-format: 'architecture-review-{0}.dev.cloudkube.io'
  url-format:      'https://{0}/'

jobs:
  ci:
    uses: ./.github/workflows/ci.yaml
    if: github.event_name == 'push'

  # Setup Vars
  # ==========
  config:
    name: 'setup-vars'
    runs-on: ubuntu-latest
    outputs:
      hostname:       ${{ steps.resolved.outputs.hostname }}
      git-sha:        ${{ steps.resolved.outputs.git-sha }}
      docker-tag:     ${{ steps.resolved.outputs.docker-tag }}

    steps:
    - uses: actions/checkout@v3

    - id: debug-context
      run: |
        echo "event_name      ${{ github.event_name }}"
        echo "ref_name        ${{ github.ref_name }}"
        echo "event.ref       ${{ github.event.ref }}"
        echo "event.ref_type  ${{ github.event.ref_type }}"

    - id: name-on-push
      if: github.event_name == 'push'
      name: 'Branch Name on `push` event'
      run: |
        echo "feat-name=$(echo '${{ github.ref_name }}' | sed -e 's/\//-/g')" >> $GITHUB_ENV

    - id: name-on-delete
      if: github.event_name == 'delete'
      name: 'Branch name on `delete` event'
      run: |
        echo "feat-name=$(echo '${{ github.event.ref }}' | sed -e 's/\//-/g')" >> $GITHUB_ENV

    - id: set-variables
      run: |
        echo "hostname=${{ format(env.hostname-format, env.feat-name) }}" >> $GITHUB_ENV
        echo "docker-tag=${{ env.feat-name }}" >> $GITHUB_ENV
        echo "git-sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - id: resolved
      run: |
        echo "hostname=${{ env.hostname }}" >> $GITHUB_OUTPUT
        echo "docker-tag=${{ env.feat-name }}" >> $GITHUB_OUTPUT
        echo "git-sha=${{ env.git-sha }}" >> $GITHUB_OUTPUT

        echo "| Variable | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|:--|:--|" >> $GITHUB_STEP_SUMMARY
        echo "| docker-tag | ${{ env.docker-tag }} |" >> $GITHUB_STEP_SUMMARY
        echo "| hostname | ${{ env.hostname }} |" >> $GITHUB_STEP_SUMMARY
        echo "| git-sha | ${{ env.git-sha }} |" >> $GITHUB_STEP_SUMMARY


  # Deploy
  # ======
  deploy:
    name: 'deploy'
    if: github.event_name == 'push'
    needs: [ci, config]
    runs-on: ubuntu-latest
    environment: dev # GitHub Environment
    steps:
    - uses: actions/checkout@v3

    - name: 'Login - Azure'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}

    - id: kubelogin
      name: 'Login - Cluster'
      uses: ./.github/actions/kubelogin
      with:
        cluster-name: ${{ env.cluster-name }}
        cluster-namespace: ${{ env.k8s-namespace }}
        resource-group: ${{ env.cluster-rg }}

    # Build and Push Docker Image
    - id: docker
      name: 'üê≥ Docker - build and push'
      env:
        image-tag: ${{ needs.config.outputs.docker-tag }}
      run: |
        az acr login --name ${{ env.acr-registry }}
        docker build -t ${{ env.base-tag }}:${{ env.image-tag }} .
        docker push ${{ env.base-tag }}:${{ env.image-tag }}
        docker logout

        echo "Image Tag: ${{ env.base-tag }}:${{ env.image-tag }}" >> $GITHUB_STEP_SUMMARY

    # Add/Update Deployment (incl. restart)
    - id: kubectl-apply
      name: 'üß™ APPLY Deployment'
      env:
        KUBECONFIG: ${{ github.workspace }}/${{ steps.kubelogin.outputs.kubeconfig }}
        APP_BUILD_SHA: ${{ needs.config.outputs.git-sha }}
        IMAGE_TAG: ${{ needs.config.outputs.docker-tag }}
        INGRESS_HOSTNAME: ${{ needs.config.outputs.hostname }}
      run: |
        cat ./manifests/feat/deployment.yaml | envsubst | kubectl apply -f -
        cat ./manifests/feat/ingress.yaml | envsubst | kubectl apply -f -
        cat ./manifests/feat/service.yaml | envsubst | kubectl apply -f -

    # Pull Latest Image
    - id: restart-pods
      name: '‚ò∏Ô∏è Restart Pods'
      env:
        KUBECONFIG: ${{ github.workspace }}/${{ steps.kubelogin.outputs.kubeconfig }}
      run: |
        kubectl rollout restart deployment \
          ${{ env.deployment-base-name }}-${{ needs.config.outputs.docker-tag }} \
          --namespace ${{ env.k8s-namespace }}
      continue-on-error: true # will fail on first deploy

    - uses: ./.github/actions/kubelogout
      name: 'Logout - Cluster'
      with:
        kubeconfig: ${{ steps.kubelogin.outputs.kubeconfig }}

  # Clean Up
  # ========
  clean-up:
    needs: config
    if: github.event_name == 'delete'
    runs-on: ubuntu-latest
    environment: dev # GitHub Envronment
    steps:
    - uses: actions/checkout@v3

    - name: 'Login - Azure'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}

    - id: kubelogin
      name: 'Login - Cluster'
      uses: ./.github/actions/kubelogin
      with:
        cluster-name: ${{ env.cluster-name }}
        cluster-namespace: ${{ env.k8s-namespace }}
        resource-group: ${{ env.cluster-rg }}

    # Remove Deployment
    - id: remove-deployment
      name: 'üßπ DELETE Deployment'
      if: github.event_name == 'delete'
      env:
        KUBECONFIG: ${{ github.workspace }}/${{ steps.kubelogin.outputs.kubeconfig }}
        APP_BUILD_SHA: ${{ needs.config.outputs.git-sha }}
        IMAGE_TAG: ${{ needs.config.outputs.docker-tag }}
        INGRESS_HOSTNAME: ${{ needs.config.outputs.hostname }}
      run: |
        cat ./manifests/feat/deployment.yaml | envsubst | kubectl delete -f -
        cat ./manifests/feat/service.yaml | envsubst | kubectl delete -f -
        cat ./manifests/feat/ingress.yaml | envsubst | kubectl delete -f -

    # Remove Docker Image
    - id: remove-image
      name: 'üßπ DELETE Docker Image'
      run: |
        az acr login --name ${{ env.acr-registry }}
        az acr repository delete \
          --name ${{ env.acr-registry }} \
          --image ${{ env.image-name }}:${{ needs.config.outputs.docker-tag }} \
          --yes

    - uses: ./.github/actions/kubelogout
      name: 'Logout - Cluster'
      with:
        kubeconfig: ${{ steps.kubelogin.outputs.kubeconfig }}
